<template>
  <div>
    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
      <el-form-item label="项目类别" prop="projectCategory">
        <el-select v-model="queryParams.projectCategory" placeholder="请选择项目类别" clearable size="small">
          <el-option v-for="dict in projectCategoryTypeList" :key="dict.dictValue" :label="dict.dictLabel" :value="dict.dictValue" />
        </el-select>
      </el-form-item>

      <el-form-item label="项目编号" prop="projectNo">
        <el-input
          v-model="queryParams.projectNo"
          placeholder="请输入项目编号"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="项目名称" prop="projectName">
        <el-input
          v-model="queryParams.projectName"
          placeholder="请输入项目名称"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="合同编号" prop="contractNo">
        <el-input
          v-model="queryParams.contractNo"
          placeholder="请输入合同编号"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="合同名称" prop="contractName">
        <el-input
          v-model="queryParams.contractName"
          placeholder="请输入合同名称"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>


      <el-form-item label="合同类别" prop="contractCategory">
        <el-select v-model="queryParams.contractCategory" placeholder="请选择合同类别" clearable size="small">
          <el-option v-for="dict in contractCategoryTypeList" :key="dict.dictValue" :label="dict.dictLabel" :value="dict.dictValue" />
        </el-select>
      </el-form-item>

      <el-form-item label="收入类型" prop="incomeType">
        <el-select v-model="queryParams.contractCategory" placeholder="请选择收入类型" clearable size="small">
          <el-option v-for="dict in incomeTypeList" :key="dict.dictValue" :label="dict.dictLabel" :value="dict.dictValue" />
        </el-select>
      </el-form-item>
      <el-form-item label="对方单位名称" prop="oppositeName">
        <el-input
          v-model="queryParams.oppositeName"
          placeholder="请输入对方单位名称"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>

      <el-form-item label="我方单位名称" prop="ourName">
        <el-input
          v-model="queryParams.ourName"
          placeholder="请输入我方单位名称"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>


      <el-form-item label="合同服务开始日期">
        <el-date-picker
          v-model="contractServeStart"
          size="small"
          style="width: 240px"
          value-format="yyyy-MM-dd"
          type="daterange"
          range-separator="-"
          start-placeholder="开始日期"
          end-placeholder="结束日期"
        ></el-date-picker>
      </el-form-item>

      <!-- <el-form-item label="合同服务截止日期">
        <el-date-picker
          v-model="contractServeEnd"
          size="small"
          style="width: 240px"
          value-format="yyyy-MM-dd"
          type="daterange"
          range-separator="-"
          start-placeholder="开始日期"
          end-placeholder="结束日期"
        ></el-date-picker>
      </el-form-item> -->


      <el-form-item label="付款方式" prop="payMethod">
        <el-select v-model="queryParams.payMethod" placeholder="请选择付款方式" clearable size="small">
          <el-option v-for="dict in payMethodList" :key="dict.dictValue" :label="dict.dictLabel" :value="dict.dictValue" />
        </el-select>
      </el-form-item>


      <el-form-item label="状态" prop="status">
        <el-select v-model="queryParams.status" placeholder="请选择状态" clearable size="small">
          <el-option v-for="dict in contractStatusList" :key="dict.dictValue" :label="dict.dictLabel" :value="dict.dictValue" />
        </el-select>
      </el-form-item>

      <el-form-item>
        <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>
    <el-row>
      <el-button-group>
        <el-button type="primary" icon="el-icon-document-add" @click="dialogVisible = true">新增</el-button>
        <el-button type="primary" icon="el-icon-edit">编辑</el-button>
        <el-button type="primary" icon="el-icon-delete">删除</el-button>
      </el-button-group>
    </el-row>

    <el-dialog title="新增信息" :visible.sync="dialogVisible" width="80%">
      <infoAdd></infoAdd>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm = false">保存</el-button>
        <el-button type="primary" @click="submitForm = false">提交</el-button>
        <el-button @click="dialogVisible = false">取消</el-button>
      </span>
    </el-dialog>

    <el-table v-loading="loading" :data="contractList" @selection-change="handleSelectionChange">
          <el-table-column type="selection" width="55" align="center" />
          <!-- <el-table-column label="备注信息" align="center" prop="id" /> -->
          <el-table-column label="合同编号" align="center" prop="contractNo" />
          <el-table-column label="项目类别" align="center" prop="projectCategory" />
          <!-- <el-table-column label="项目ID" align="center" prop="projectId" /> -->
          <el-table-column label="项目编号" align="center" prop="projectNo" />
          <el-table-column label="项目名称" align="center" prop="projectName" />


          <el-table-column label="合同名称" align="center" prop="contractName" />
          <!-- <el-table-column label="月份" align="center" prop="month" /> -->
          <el-table-column label="合同类别" align="center" prop="contractCategory" />
          <el-table-column label="收入类型" align="center" prop="incomeType" />
          <el-table-column label="对方单位名称" align="center" prop="oppositeName" />
          <el-table-column label="我方单位名称" align="center" prop="ourName" />
          <el-table-column label="合同签订日期" align="center" prop="starttime" width="180">
            <template slot-scope="scope">
              <span>{{ parseTime(scope.row.starttime, '{y}-{m}-{d}') }}</span>
            </template>
          </el-table-column>
          <el-table-column label="合同截止日期" align="center" prop="endtime" width="180">
            <template slot-scope="scope">
              <span>{{ parseTime(scope.row.endtime, '{y}-{m}-{d}') }}</span>
            </template>
          </el-table-column>
          <el-table-column label="合同服务开始日期" align="center" prop="contractServeStart" width="180">
            <template slot-scope="scope">
              <span>{{ parseTime(scope.row.contractServeStart, '{y}-{m}-{d}') }}</span>
            </template>
          </el-table-column>
          <!-- <el-table-column label="服务期限" align="center" prop="serviceTerm" /> -->
          <el-table-column label="合同服务截止日期" align="center" prop="contractServeEnd" width="180">
            <template slot-scope="scope">
              <span>{{ parseTime(scope.row.contractServeEnd, '{y}-{m}-{d}') }}</span>
            </template>
          </el-table-column>
          <el-table-column label="合同标的额" align="center" prop="totalMoney" />
          <el-table-column label="税率" align="center" prop="taxrate" />
          <el-table-column label="不含税金额" align="center" prop="notTaxMoney" />
          <el-table-column label="付款方式" align="center" prop="payMethod" />
          <!-- <el-table-column label="合同归档资料" align="center" prop="archiveFiles" /> -->
          <el-table-column label="经办部门" align="center" prop="manageDeptment" />
          <el-table-column label="经办人" align="center" prop="manageUser" />
          <!-- <el-table-column label="变更之前ID" align="center" prop="originalId" /> -->
          <el-table-column label="状态" align="center" prop="status" />
          <el-table-column label="状态说明" align="center" prop="statusPs" />
          <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
            <template slot-scope="scope">
              <el-button
                size="mini"
                type="text"
                icon="el-icon-edit"
                @click="handleUpdate(scope.row)"
                v-hasPermi="['contract:contractInfo:edit']"
              >修改</el-button>
              <el-button
                size="mini"
                type="text"
                icon="el-icon-delete"
                @click="handleDelete(scope.row)"
                v-hasPermi="['contract:contractInfo:editRemove']"
              >删除</el-button>
            </template>
          </el-table-column>
          <!-- <div slot='append' style='padding: 20px 0'>
            统计：
            合同标的额:{{sum.totalMoneySum}};
            不含税金额:{{sum.notTaxMoneySum}};
            未收金额:{{sum.outstandingAmountSum}};
            已收金额:{{sum.receiveAmountSum}};
            已核销金额:{{sum.writeOffAmountSum}};
            未核销金额:{{sum.nwriteOffAmountSum}};
          </div> -->
        </el-table>

        <pagination
          v-show="total>0"
          :total="total"
          :page.sync="queryParams.pageNum"
          :limit.sync="queryParams.pageSize"
          @pagination="getList"
        />
  </div>
</template>

<script>
  import { listContract, getContract, delContract, addContract, updateContract, exportContract } from "@/api/contract/contractInfo";
  import infoAdd from './infoAdd.vue'

export default {
  name: "Contract",
  components: {
    infoAdd
  },

  data() {
    return {
      dialogVisible: false,
      // 合同信息录入主表格数据
      contractList: [],
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      //项目类型
      projectCategoryTypeList:[],
      //合同类别
      contractCategoryTypeList: [],
      //收入类型
      incomeTypeList: [],
      //付款方式
      payMethodList: [],
      //合同状态
      contractStatusList: [],

      contentTypeList:[],
      // 日期范围
      starttime: [],
      endtime: [],
      contractServeStart: [],
      contractServeEnd: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        projectCategory: null,
        contentType: null,
        projectId: null,
        projectNo: null,
        projectName: null,
        contractNo: null,
        contractName: null,
        month: null,
        contractCategory: null,
        incomeType: null,
        oppositeName: null,
        oppositeBank: null,
        oppositeBankId: null,
        oppositeContacts: null,
        oppositePhone: null,
        oppositeAddress: null,
        ourName: null,
        ourContacts: null,
        ourPhone: null,
        ourBank: null,
        ourBankId: null,
        ourAddress: null,
        starttime: null,
        endtime: null,
        contractServeStart: null,
        serviceTerm: null,
        contractServeEnd: null,
        totalMoney: null,
        taxrate: null,
        notTaxMoney: null,
        payMethod: null,
        archiveFiles: null,
        manageDeptment: null,
        manageUser: null,
        originalId: null,
        status: null,
        statusPs: null,
        contractScanningFile: null,
        contractApprovalFile: null,
        otherFiles: null,
        remarks: null,
        sum:'',//统计
      },
    };
  },
  created() {
    this.getList();
    //项目类型列表
    this.getDicts("project_category_type").then((response) => {
      this.projectCategoryTypeList = response.data;
    });
    //合同类别
    this.getDicts("contract_category_type").then((response) => {
      this.contractCategoryTypeList = response.data;
    });
    //收入类型
    this.getDicts("income_type").then((response) => {
      this.incomeTypeList = response.data;
    });
    //付款方式
    this.getDicts("pay_method").then((response) => {
      this.payMethodList = response.data;
    });
    //合同状态
    this.getDicts("contract_status").then((response) => {
      this.contractStatusList = response.data;
    });
  },
  methods: {
    /** 查询合同信息录入主列表 */
    getList() {
      this.loading = true;
      listContract(this.addDateRange(this.queryParams, this.contractServeStart)).then(response => {
        this.contractList = response.rows[0];
        this.sum =  response.rows[1];
        this.total = response.total;
        this.loading = false;
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        id: null,
        createBy: null,
        createTime: null,
        updateBy: null,
        updateTime: null,
        projectCategory: null,

        projectId: null,
        projectNo: null,
        projectName: null,
        contractNo: null,
        contractName: null,
        month: null,
        contractCategory: null,
        incomeType: null,
        oppositeName: null,
        oppositeBank: null,
        oppositeBankId: null,
        oppositeContacts: null,
        oppositePhone: null,
        oppositeAddress: null,
        ourName: null,
        ourContacts: null,
        ourPhone: null,
        ourBank: null,
        ourBankId: null,
        ourAddress: null,
        starttime: null,
        endtime: null,
        contractServeStart: null,
        serviceTerm: null,
        contractServeEnd: null,
        totalMoney: null,
        taxrate: null,
        notTaxMoney: null,
        payMethod: null,
        archiveFiles: null,
        manageDeptment: null,
        manageUser: null,
        originalId: null,
        status: 0,
        statusPs: null,
        contractScanningFile: null,
        contractApprovalFile: null,
        otherFiles: null,
        delFlag: null,
        remarks: null
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.id)
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加合同信息录入主";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const id = row.id || this.ids
      getContract(id).then(response => {
        this.form = response.data;
        this.open = true;
        this.title = "修改合同信息录入主";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          if (this.form.id != null) {
            updateContract(this.form).then(response => {
              this.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            addContract(this.form).then(response => {
              this.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const ids = row.id || this.ids;
      this.$confirm('是否确认删除合同信息录入主编号为"' + ids + '"的数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return delContract(ids);
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        })
    },
    /** 导出按钮操作 */
    handleExport() {
      const queryParams = this.queryParams;
      this.$confirm('是否确认导出所有合同信息录入主数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return exportContract(queryParams);
        }).then(response => {
          this.download(response.msg);
        })
    },
  },

};
</script>
