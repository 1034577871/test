package com.ruoyi.projectApproval.ApprovalNg.service.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ruoyi.base.cache.service.CacheService;
import com.ruoyi.common.core.domain.entity.SysDept;
import com.ruoyi.common.utils.DateUtils;
import com.ruoyi.common.utils.SecurityUtils;
import com.ruoyi.common.utils.uuid.UUID;
import com.ruoyi.dictionary.proType.domain.CtDicProtype;
import com.ruoyi.projectApproval.AppNgBase.domain.AppNgBase;
import com.ruoyi.projectApproval.AppNgBase.service.IAppNgBaseService;
import com.ruoyi.projectApproval.AppNgConst.domain.AppNgConst;
import com.ruoyi.projectApproval.AppNgConst.service.IAppNgConstService;
import com.ruoyi.projectApproval.AppNgMaterial.domain.AppNgMaterial;
import com.ruoyi.projectApproval.AppNgMaterial.service.IAppNgMaterialService;
import com.ruoyi.projectApproval.AppNgReqList.domain.AppNgReqList;
import com.ruoyi.projectApproval.AppNgReqList.service.IAppNgReqListService;
import com.ruoyi.projectApproval.ApprovalNg.domain.CtBuApprovalNg;
import com.ruoyi.projectApproval.ApprovalNg.mapper.CtBuApprovalNgMapper;
import com.ruoyi.projectApproval.ApprovalNg.service.ICtBuApprovalNgService;
import com.ruoyi.projectApproval.AppxNgReq.domain.AppxNgReq;
import com.ruoyi.projectApproval.AppxNgReq.service.IAppxNgReqService;
import com.ruoyi.system.service.ISysDeptService;

/**
 * @Title: CtBuApprovalNgServiceImpl.java
 * @Description: 集客项目Service
 * @Author M.Mu
 * @Date 2020-12-08
 */
@Service
public class CtBuApprovalNgServiceImpl implements ICtBuApprovalNgService {

	@Autowired
	private CtBuApprovalNgMapper ctBuApprovalNgMapper;

	@Autowired
	private IAppNgBaseService appNgBaseService;

	@Autowired
	private IAppNgConstService appNgConstService;

	@Autowired
	private IAppNgMaterialService appNgMaterialService;

	@Autowired
	private IAppxNgReqService appxNgReqService;

	@Autowired
	private RedisTemplate<String, Serializable> redis1;

	@Autowired
	private ISysDeptService deptService;

	@Autowired
	private CacheService cacheService;
	
	@Autowired
	private IAppNgReqListService appNgReqListService;
	
	/**
	 * 查询事前审批主(集客类)
	 * 
	 * @param id 事前审批主(集客类)ID
	 * @return 事前审批主(集客类)
	 */
	@Override
	public CtBuApprovalNg selectCtBuApprovalNgById(String id) {
		String key = "CtBuApprovalNg";
		String hashKey = id;
		/** 判断当前ID是否存在 **/
		if (redis1.opsForHash().hasKey(key, hashKey)) {
			CtBuApprovalNg ctBuApprovalNg = (CtBuApprovalNg) redis1.opsForHash().get(key, hashKey);
			if (ctBuApprovalNg != null && StringUtils.isNotBlank(ctBuApprovalNg.getId())) {
				return ctBuApprovalNg;
			} else {
				return new CtBuApprovalNg();
			}
		} else {
			CtBuApprovalNg ctBuApprovalNg = ctBuApprovalNgMapper.selectCtBuApprovalNgById(id);
			if (ctBuApprovalNg != null && StringUtils.isNotBlank(ctBuApprovalNg.getId())) {
				/** 项目基本情况 **/
				AppNgBase appNgBase = appNgBaseService.selectAppNgBaseByBid(id);
				if (appNgBase != null && StringUtils.isNotBlank(appNgBase.getId())) {
					if (StringUtils.isNotBlank(appNgBase.getBranchInvolvedId())) {
						Integer[] branIdStr = com.ruoyi.common.utils.StringUtils
								.stringToIntArr(appNgBase.getBranchInvolvedId());
						if (branIdStr != null && branIdStr.length > 0) {
							appNgBase.setBranIdStr(branIdStr);
						}
					}
					ctBuApprovalNg.setAppNgBase(appNgBase);
				} else {
					ctBuApprovalNg.setAppNgBase(new AppNgBase());
				}
				/** 施工费情况 **/
				AppNgConst appNgConst = appNgConstService.selectAppNgConstByBid(id);
				if (appNgConst != null && StringUtils.isNotBlank(appNgConst.getId())) {
					ctBuApprovalNg.setAppNgConst(appNgConst);
				} else {
					ctBuApprovalNg.setAppNgConst(new AppNgConst());
				}
				/** 材料使用情况 **/
				AppNgMaterial appNgMaterial = new AppNgMaterial();
				appNgMaterial.setBid(id);
				List<AppNgMaterial> appNgMaterialList = appNgMaterialService.selectAppNgMaterialList(appNgMaterial);
				if (appNgMaterialList != null && !appNgMaterialList.isEmpty()) {
					ctBuApprovalNg.setAppNgMaterialList(appNgMaterialList);
				} else {
					ctBuApprovalNg.setAppNgMaterialList(new ArrayList<>());
				}
				/** 事前审批 **/
				AppxNgReq appxNgReq = appxNgReqService.selectAppxNgReqByBid(id);
				if (appxNgReq != null && StringUtils.isNotBlank(appxNgReq.getId())) {
					/** 获取成本子类信息 **/
					AppNgReqList appNgReqList = new AppNgReqList();
					appNgReqList.setPid(appxNgReq.getId());
					List<AppNgReqList> reqList = appNgReqListService.selectAppNgReqListList(appNgReqList);
					if(reqList != null && !reqList.isEmpty()) {
						appxNgReq.setDataList(reqList);
					}
					ctBuApprovalNg.setAppxNgReq(appxNgReq);
				} else {
					ctBuApprovalNg.setAppxNgReq(new AppxNgReq());
				}
				redis1.opsForHash().put(key, hashKey, ctBuApprovalNg);
				return ctBuApprovalNg;
			} else {
				return new CtBuApprovalNg();
			}
		}
	}

	/**
	 * 查询事前审批主(集客类)列表
	 * 
	 * @param ctBuApprovalNg 事前审批主(集客类)
	 * @return 事前审批主(集客类)
	 */
	@Override
	public List<CtBuApprovalNg> selectCtBuApprovalNgList(CtBuApprovalNg ctBuApprovalNg) {

		List<CtBuApprovalNg> list = ctBuApprovalNgMapper.selectCtBuApprovalNgList(ctBuApprovalNg);
		if (list != null && !list.isEmpty()) {
			for (int i = 0; i < list.size(); i++) {
				CtBuApprovalNg approvalNg = list.get(i);
				/** 获取项目类型名称 **/
				if (approvalNg != null && StringUtils.isNotBlank(approvalNg.getProType())) {
					CtDicProtype protype = cacheService.findProtypeById(approvalNg.getProType());
					if (protype != null && StringUtils.isNotBlank(protype.getTypeName())) {
						approvalNg.setProTypeName(protype.getTypeName());
					}
				}
				/** 所属分公司 **/
				if (approvalNg != null && StringUtils.isNotBlank(approvalNg.getBelongCompanyid())) {
					SysDept sysDept = cacheService.findSysDeptById(approvalNg.getBelongCompanyid());
					if (sysDept != null && StringUtils.isNotBlank(sysDept.getDeptName())) {
						approvalNg.setBelongCompanyName(sysDept.getDeptName());
					}
				}
				/** 所属部门 **/
				if (approvalNg != null && StringUtils.isNotBlank(approvalNg.getBelongDeptid())) {
					SysDept sysDept = cacheService.findSysDeptById(approvalNg.getBelongDeptid());
					if (sysDept != null && StringUtils.isNotBlank(sysDept.getDeptName())) {
						approvalNg.setBelongDeptName(sysDept.getDeptName());
					}
				}
			}
		}

		return list;
	}

	/**
	 * 新增事前审批主(集客类)
	 * 
	 * @param ctBuApprovalNg 事前审批主(集客类)
	 * @return 结果
	 */
	@Override
	@Transactional
	public int insertCtBuApprovalNg(CtBuApprovalNg ctBuApprovalNg) {
		ctBuApprovalNg.setId(UUID.fastUUID().toString(true));
		ctBuApprovalNg.setDelFlag(1);
		String userId = "";
		Long deptId = 1L;
		try {
			userId = SecurityUtils.getLoginUser().getUser().getUserId().toString();
			deptId = SecurityUtils.getLoginUser().getUser().getCompanyId();
		} catch (Exception e) {

		}
		ctBuApprovalNg.setCreateBy(userId);
		ctBuApprovalNg.setCreateTime(DateUtils.getNowDate());
		ctBuApprovalNg.setStatus(0);
		ctBuApprovalNg.setStatusPs("保存");

		/** 项目基本情况 **/
		AppNgBase appNgBase = ctBuApprovalNg.getAppNgBase();
		appNgBase.setId(UUID.fastUUID().toString(true));
		appNgBase.setBid(ctBuApprovalNg.getId());
		appNgBase.setCreateBy(userId);
		appNgBase.setDelFlag(1);
		if (appNgBase.getBranIdStr() != null && appNgBase.getBranIdStr().length > 0) {
			String branchInvolvedId = "";
			Integer[] branIdStr = appNgBase.getBranIdStr();
			for (int i = 0; i < branIdStr.length; i++) {
				branchInvolvedId += branIdStr[i] + ",";
			}
			appNgBase.setBranchInvolvedId(branchInvolvedId);
		}
		appNgBaseService.insertAppNgBase(appNgBase);

		/** 材料使用情况 **/
		List<AppNgMaterial> mateList = ctBuApprovalNg.getAppNgMaterialList();
		if (mateList != null && !mateList.isEmpty()) {
			for (int i = 0; i < mateList.size(); i++) {
				AppNgMaterial appNgMaterial = mateList.get(i);
				appNgMaterial.setId(UUID.fastUUID().toString(true));
				appNgMaterial.setBid(ctBuApprovalNg.getId());
				appNgMaterial.setCreateBy(userId);
				appNgMaterial.setDelFlag(1);
				appNgMaterialService.insertAppNgMaterial(appNgMaterial);
			}
		}

		/** 施工费情况 **/
		AppNgConst appNgConst = ctBuApprovalNg.getAppNgConst();
		if (appNgConst != null && StringUtils.isNotBlank(appNgConst.getProjectName())) {
			appNgConst.setId(UUID.fastUUID().toString(true));
			appNgConst.setBid(ctBuApprovalNg.getId());
			appNgConst.setCreateBy(userId);
			appNgConst.setDelFlag(1);
			appNgConstService.insertAppNgConst(appNgConst);
		}

		/** 事前审批 **/
		AppxNgReq appxNgReq = ctBuApprovalNg.getAppxNgReq();
		if (appxNgReq != null && StringUtils.isNotBlank(appxNgReq.getAppxNgNo())) {
			appxNgReq.setId(UUID.fastUUID().toString(true));
			appxNgReq.setBid(ctBuApprovalNg.getId());
			appxNgReq.setCreateBy(userId);
			appxNgReq.setAppxNgNo(createReqNo(deptId));
			appxNgReq.setDelFlag(1);
			appxNgReqService.insertAppxNgReq(appxNgReq);
			/** 成本子类 **/
			List<AppNgReqList> aaList = appxNgReq.getDataList();
			if (aaList != null && !aaList.isEmpty()) {
				for (int i = 0; i < aaList.size(); i++) {
					AppNgReqList appNgReqList = aaList.get(i);
					appNgReqList.setId(UUID.fastUUID().toString(true));
					appNgReqList.setPid(appxNgReq.getId());
					appNgReqList.setCreateTime(new Date());
					appNgReqListService.insertAppNgReqList(appNgReqList);
				}
			}
		}
		/** 赋值事前审批编号 **/
		ctBuApprovalNg.setReqNo(appxNgReq.getAppxNgNo());
		return ctBuApprovalNgMapper.insertCtBuApprovalNg(ctBuApprovalNg);
	}

	/**
	 * 修改事前审批主(集客类)
	 * 
	 * @param ctBuApprovalNg 事前审批主(集客类)
	 * @return 结果
	 */
	@Override
	@Transactional
	public int updateCtBuApprovalNg(CtBuApprovalNg ctBuApprovalNg) {
		ctBuApprovalNg.setUpdateTime(DateUtils.getNowDate());
		/** 项目基本情况 **/
		appNgBaseService.updateAppNgBase(ctBuApprovalNg.getAppNgBase());
		/** 施工费情况 **/
		appNgConstService.updateAppNgConst(ctBuApprovalNg.getAppNgConst());
		/** 材料使用情况 **/
		List<AppNgMaterial> materList = ctBuApprovalNg.getAppNgMaterialList();
		if (materList != null && !materList.isEmpty()) {
			for (int i = 0; i < materList.size(); i++) {
				appNgMaterialService.updateAppNgMaterial(materList.get(i));
			}
		}
		/** 事前审批 **/
		appxNgReqService.updateAppxNgReq(ctBuApprovalNg.getAppxNgReq());
		return ctBuApprovalNgMapper.updateCtBuApprovalNg(ctBuApprovalNg);
	}

	/**
	 * 批量删除事前审批主(集客类)
	 * 
	 * @param ids 需要删除的事前审批主(集客类)ID
	 * @return 结果
	 */
	@Override
	@Transactional
	public int deleteCtBuApprovalNgByIds(String[] ids) {
		if (ids != null && ids.length > 0) {
			for (int i = 0; i < ids.length; i++) {
				/** 逻辑删除事前审批主表信息 **/
				Integer numFlag = ctBuApprovalNgMapper.deleteCtBuApprovalNgById(ids[i]);
				if (numFlag != null && numFlag > 0) {
					/** 项目基本情况 **/
					appNgBaseService.deleteAppNgBaseByBid(ids[i]);
					/** 施工费情况 **/
					appNgConstService.deleteAppNgConstByBid(ids[i]);
					/** 材料使用情况 **/
					appNgMaterialService.deleteAppNgMaterialByBid(ids[i]);
					/** 事前审批 **/
					appxNgReqService.deleteAppxNgReqByBid(ids[i]);
				}
			}
		}
		return 1;
	}

	/**
	 * 删除事前审批主(集客类)信息
	 * 
	 * @param id 事前审批主(集客类)ID
	 * @return 结果
	 */
	@Override
	@Transactional
	public int deleteCtBuApprovalNgById(String id) {
		/** 逻辑删除事前审批主表信息 **/
		Integer numFlag = ctBuApprovalNgMapper.deleteCtBuApprovalNgById(id);
		if (numFlag != null && numFlag > 0) {
			/** 项目基本情况 **/
			appNgBaseService.deleteAppNgBaseByBid(id);
			/** 施工费情况 **/
			appNgConstService.deleteAppNgConstByBid(id);
			/** 材料使用情况 **/
			appNgMaterialService.deleteAppNgMaterialByBid(id);
			/** 事前审批 **/
			appxNgReqService.deleteAppxNgReqByBid(id);
		}
		return numFlag;
	}

	/**
	 * @Title: AppNgcServiceImpl.java
	 * @Description: 生成集客项目事前审批编号
	 * @Description: deptId ---所属部门ID
	 * @Author M.Mu
	 * @Date 2020-12-11
	 */
	public String createReqNo(Long deptId) {
		/** 根据所属分公司ID获取分公司全名 **/
		if (deptId != null) {
			/** 1、公司别名 **/
			String company = "JN";
			/** 根据当前登录人的所属公司ID获取公司名称 **/
			SysDept sysDept = deptService.selectDeptById(deptId);
			if (sysDept != null && StringUtils.isNotBlank(sysDept.getDeptName())) {
				if (sysDept.getDeptName().contains("宽带")) {
					company = "KD";
				} else if (sysDept.getDeptName().contains("数字")) {
					company = "SZ";
				} else if (sysDept.getDeptName().contains("本部")) {
					company = "JN";
				} else if (sysDept.getDeptName().contains("历下")) {
					company = "LX";
				} else if (sysDept.getDeptName().contains("市中")) {
					company = "SZ";
				} else if (sysDept.getDeptName().contains("槐荫")) {
					company = "HY";
				} else if (sysDept.getDeptName().contains("天桥")) {
					company = "TQ";
				} else if (sysDept.getDeptName().contains("济阳")) {
					company = "JY";
				} else if (sysDept.getDeptName().contains("商河")) {
					company = "SH";
				} else if (sysDept.getDeptName().contains("平阴")) {
					company = "PI";
				} else if (sysDept.getDeptName().contains("长清")) {
					company = "CQ";
				} else if (sysDept.getDeptName().contains("章丘")) {
					company = "ZQ";
				} else if (sysDept.getDeptName().contains("莱芜")) {
					company = "LW";
				} else if (sysDept.getDeptName().contains("先行")) {
					company = "XX";
				}
			}
			/** 2、年月日 **/
			String date = DateUtils.dateTime();
			/** 3、当月集客项目数量(5位) **/
			String numStr = "";
			AppxNgReq appxNgReq = new AppxNgReq();
			appxNgReq.setStime(DateUtils.getMonthBegin(DateUtils.getDate()));
			appxNgReq.setEtime(DateUtils.getMonthEnd(DateUtils.getDate()));
			Integer nums = appxNgReqService.findNumsByData(appxNgReq);
			if (nums != null && nums > 0) {
				numStr = com.ruoyi.common.utils.StringUtils.getStringByInt(nums);
			} else {
				numStr = com.ruoyi.common.utils.StringUtils.getStringByInt(0);
			}
			return company + date + numStr;
		}
		return "";
	}

	@Override
	public String findNextAppNo() {
		Long deptId = 1L;
		try {
			deptId = SecurityUtils.getLoginUser().getUser().getCompanyId();
		} catch (Exception e) {

		}
		return this.createReqNo(deptId);
	}
}