package com.ruoyi.collection.utils;

import com.ruoyi.common.core.domain.entity.SysUser;
import com.ruoyi.common.core.domain.model.LoginUser;
import com.ruoyi.system.service.ISysUserService;
import org.activiti.api.process.model.ProcessInstance;
import org.activiti.api.process.model.builders.ProcessPayloadBuilder;
import org.activiti.api.process.runtime.ProcessRuntime;
import org.activiti.api.task.model.builders.TaskPayloadBuilder;
import org.activiti.api.task.runtime.TaskRuntime;
import org.activiti.engine.TaskService;
import org.activiti.engine.task.Task;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActUtils {

    public  static String submitTask(ProcessRuntime processRuntime, LoginUser loginUser, String uuid, Map<String, Object> variables
    , TaskService taskService,TaskRuntime taskRuntime){
        //查询部门为当前登陆人，角色为分公司负责人,角色临时写死
        ProcessInstance processInstance = processRuntime.start(ProcessPayloadBuilder
                .start()
                .withProcessDefinitionKey("invoiceApply")
                .withName("开票申请-"+loginUser.getUser().getUserName())
                .withBusinessKey(uuid)
                .withVariables(variables)
                //.withVariable("companyFinaAudit",sysUser.getUserName())
                .build());
        String InstanceId = (processInstance.getId());
        // 根据流程实例Id查询任务
        Task task =  taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
        //完成任务
        taskRuntime.complete(TaskPayloadBuilder.complete().withTaskId(task.getId())
                .build());
        return InstanceId;
    }
    /**
     * 获取各个流程组人员
     * @param dept_id
     * @return
     */
    public static String getVarirs(Long dept_id,String roleid,ISysUserService iSysUserService){
        List<String> ulist = new ArrayList();
        Map params = new HashMap();
        params.put("roleId",roleid);
        params.put("deptId",dept_id);
        List<SysUser> users = iSysUserService.selectUserByRoleDept(params);
        SysUser sysUser = new SysUser();
        if(users!=null && users.size()>0){
            for (SysUser user:users)  {
                ulist.add(user.getUserName());
            }
            //sysUser = users.get(0) ;
        }
        String str = org.apache.commons.lang.StringUtils.join(ulist.toArray(),",");
        return str;
    }

}
